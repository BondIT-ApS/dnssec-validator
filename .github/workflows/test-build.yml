name: test-build

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of build to test'
        required: true
        default: 'nightly'
        type: choice
        options:
        - nightly
        - monthly
      push_images:
        description: 'Actually push to Docker Hub (otherwise just build)'
        required: false
        default: false
        type: boolean

jobs:
  test-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      IMAGE: maboni82/dnssec-validator
      TZ: Europe/Copenhagen
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set test tags
        id: vars
        run: |
          DATE_LOCAL=$(date +'%Y.%m.%d')
          MONTH_LOCAL=$(date +'%Y.%m')
          SHORT_SHA="${GITHUB_SHA::7}"
          
          if [[ "${{ inputs.test_type }}" == "nightly" ]]; then
            TAG1="test-dev-${DATE_LOCAL}"
            TAG2="test-${SHORT_SHA}"
            echo "ðŸ§ª Testing NIGHTLY build:"
          else
            TAG1="test-v-${MONTH_LOCAL}"
            TAG2="test-latest"
            echo "ðŸ§ª Testing MONTHLY build:"
          fi
          
          echo "   Tags: $TAG1, $TAG2"
          echo "   Push to registry: ${{ inputs.push_images }}"
          
          echo "TAG1=${TAG1}" >> "$GITHUB_OUTPUT"
          echo "TAG2=${TAG2}" >> "$GITHUB_OUTPUT"

      - name: Log in to Docker Hub
        if: inputs.push_images
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and optionally push test image
        run: |
          TAG1="${{ steps.vars.outputs.TAG1 }}"
          TAG2="${{ steps.vars.outputs.TAG2 }}"
          
          BUILD_ARGS="--platform linux/amd64,linux/arm64"
          BUILD_ARGS="$BUILD_ARGS -t $IMAGE:$TAG1"
          BUILD_ARGS="$BUILD_ARGS -t $IMAGE:$TAG2"
          
          if [[ "${{ inputs.push_images }}" == "true" ]]; then
            BUILD_ARGS="$BUILD_ARGS --push"
            echo "ðŸš€ Building and pushing to Docker Hub..."
          else
            echo "ðŸ”¨ Building locally (no push)..."
          fi
          
          docker buildx build $BUILD_ARGS .
