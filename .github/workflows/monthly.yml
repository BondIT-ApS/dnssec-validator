name: monthly

on:
  schedule:
    # 21:12 local time in Europe/Copenhagen, accounting for DST:
    # - Apr–Oct (CEST, UTC+2) => 19:12 UTC
    - cron: "12 19 * 4-10 *"
    # - Nov–Mar (CET, UTC+1) => 20:12 UTC
    - cron: "12 20 * 11,12,1-3 *"
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force monthly build (ignore first-weekday check)'
        required: false
        default: 'false'
        type: boolean

jobs:
  monthly:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      IMAGE: maboni82/dnssec-validator
      TZ: Europe/Copenhagen
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Decide if today is first weekday of month (Europe/Copenhagen)
        id: when
        shell: bash
        run: |
          FIRST_OF_MONTH=$(date +'%Y-%m-01')
          DOW=$(date -d "$FIRST_OF_MONTH" +%u)  # 1..7 Mon..Sun
          case "$DOW" in
            6) FIRST_WEEKDAY=$(date -d "$FIRST_OF_MONTH +2 days" +%Y-%m-%d) ;;
            7) FIRST_WEEKDAY=$(date -d "$FIRST_OF_MONTH +1 day" +%Y-%m-%d) ;;
            *) FIRST_WEEKDAY=$(date -d "$FIRST_OF_MONTH" +%Y-%m-%d) ;;
          esac
          TODAY=$(date +%Y-%m-%d)
          
          echo "📅 Checking monthly build conditions:"
          echo "   Today: $TODAY ($(date +'%A'))"
          echo "   First of month: $FIRST_OF_MONTH (day-of-week: $DOW)"
          echo "   First weekday: $FIRST_WEEKDAY"
          echo "   Force run: ${{ inputs.force_run }}"
          
          echo "FIRST_WEEKDAY=$FIRST_WEEKDAY" >> "$GITHUB_OUTPUT"
          echo "TODAY=$TODAY" >> "$GITHUB_OUTPUT"
          
          if [[ "${{ inputs.force_run }}" == "true" ]] || [[ "$TODAY" == "$FIRST_WEEKDAY" ]]; then
            echo "✅ Running monthly build!"
            echo "RUN=true" >> "$GITHUB_OUTPUT"
          else
            echo "⏸️ Skipping - not first weekday and not forced"
            echo "RUN=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set tags
        if: steps.when.outputs.RUN == 'true'
        id: vars
        run: |
          MONTH_LOCAL=$(date +'%Y.%m')
          echo "MONTH_LOCAL=${MONTH_LOCAL}" >> "$GITHUB_OUTPUT"
          SHORT_SHA="${GITHUB_SHA::7}"
          echo "SHORT_SHA=${SHORT_SHA}" >> "$GITHUB_OUTPUT"

      - name: Log in to Docker Hub
        if: steps.when.outputs.RUN == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        if: steps.when.outputs.RUN == 'true'
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        if: steps.when.outputs.RUN == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Build and push monthly image
        if: steps.when.outputs.RUN == 'true'
        run: |
          TAG_MONTH="v-${{ steps.vars.outputs.MONTH_LOCAL }}"
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t "$IMAGE:$TAG_MONTH" \
            -t "$IMAGE:latest" \
            --push \
            .

